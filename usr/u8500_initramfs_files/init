#!/stage1/busybox sh
_PATH="$PATH"
export PATH=/stage1

cd /
date >>boot.txt
exec >>boot.txt 2>&1

busybox rm init
busybox mount -t proc proc /proc
busybox mount -t sysfs sysfs /sys

load_image=/stage1/boot.cpio
#boot/recovery specific overlay
extra_image=/mnt/efs/boot.cpio.gz
extra_dir=/mnt/efs/boot

#common overlay
common_dir=/mnt/efs/common

if grep -q bootmode=2 /proc/cmdline ; then
	# recovery boot
	load_image=/stage1/recovery.cpio
	extra_image=/mnt/efs/recovery.cpio.gz
	extra_dir=/mnt/efs/recovery
fi

busybox cpio -i < ${load_image}

# install lvm files and apply overlay if it exists
if busybox test -f /stage1/lvm.cpio ; then
	busybox cpio -i < /stage1/lvm.cpio
fi

mount -t ext4 /dev/block/mmcblk0p7 /mnt/efs

# LEGACY BEGIN

#DON'T USE THESE IF POSSIBLE - use dirs below
# apply ramdisk overlay from /efs partition
if busybox test -f ${extra_image} ; then
	busybox zcat ${extra_image} | busybox cpio -i -u
fi
if busybox test -f /mnt/efs/lvm.cpio.gz ; then
	busybox zcat /mnt/efs/lvm.cpio.gz | busybox cpio -i -u
fi

# LEGACY END

echo -n > /init.overlay.rc
chmod 644 /init.overlay.rc

# safety measure to prevent common includes to damage /init.rc and prevent phone from booting
cp /init.rc /stage1/
[ -d $common_dir ] && load_dir $common_dir
cp -f /stage1/init.rc /

[ -d $extra_dir ] && load_dir $extra_dir

# safety measure to prevent common includes to damage /init.rc and prevent phone from booting
cp -f /init.rc /stage1/
[ -d $common_dir/overlay ] && cp -af $common_dir/overlay/* /
cp -f /stage1/init.rc /

[ -d $extra_dir/overlay ] && cp -af $extra_dir/overlay/* /

cp /init.rc /stage1/init.rc

cat > /init.rc << _EOF
#monkey-patched by stage1 init script
import /init.kernel.rc
import /init.overlay.rc
import /init.extra.rc
#monkey-patch end

_EOF
cat /stage1/init.rc >> /init.rc

#unsecure the kernel ;P
busybox sed -i -e "s/ro.secure=1/ro.secure=0/" /default.prop
if [ grep ro.adb.secure /default.prop ]; then
	busybox sed -i -e "s/ro.adb.secure=1/ro.adb.secure=0/" /default.prop
else
	echo "ro.adb.secure=0" >> /default.prop
fi

for m in /modules/*.ko; do
	insmod $m
done

if [ -e /dev/log/main ]; then
	#if logger is loaded, start adb early to enable capturing logcat of system services failures
	echo "sys.usb.config=mtp,adb" >> /default.prop
	echo "persist.sys.usb.config=mtp,adb" >> /default.prop
fi

test -f /stage1/extra.sh && sh /stage1/extra.sh

umount /mnt/efs

umount /sys
umount /proc
date >>boot.txt
rm -fr /stage1 /dev/* /modules
export PATH="${_PATH}"
exec /init
